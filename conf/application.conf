# Copyright 2024 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "frontend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = smartpay-connect-stub

# Primary entry point for all HTTP requests on Play applications
play.http.errorHandler = "handlers.ErrorHandler"

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.frontend.FrontendModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.play.audit.AuditModule"
# play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
play.modules.enabled += "config.Module"

#We remove some of the standard MDTP platform filters to make the behaviour of this
#microservice closer to production proxy (which doesn't run on MDTP)
play.filters.enabled  = [
#   "play.filters.headers.SecurityHeadersFilter",
#   "com.kenshoo.play.metrics.MetricsFilter",
#   "uk.gov.hmrc.play.bootstrap.frontend.filters.crypto.SessionCookieCryptoFilter",
#   "uk.gov.hmrc.play.bootstrap.frontend.filters.HeadersFilter",
#   "uk.gov.hmrc.play.bootstrap.frontend.filters.SessionIdFilter",
#   "uk.gov.hmrc.play.bootstrap.frontend.filters.deviceid.DeviceIdFilter",
  "uk.gov.hmrc.play.bootstrap.filters.MDCFilter",
  "uk.gov.hmrc.play.bootstrap.filters.LoggingFilter"
#  "uk.gov.hmrc.play.bootstrap.filters.AuditFilter",
#  "uk.gov.hmrc.play.bootstrap.frontend.filters.SessionTimeoutFilter",
#  "play.filters.csrf.CSRFFilter",
#  "uk.gov.hmrc.play.bootstrap.filters.CacheControlFilter",
#  "uk.gov.hmrc.play.bootstrap.frontend.filters.AllowlistFilter"
]


# Play Modules
# ~~~~
# Additional play modules can be added here


# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

play.filters.enabled += "play.filters.cors.CORSFilter"

play.filters.cors {
    allowedOrigins = [
        "http://localhost:9260",
        "https://admin.development.tax.service.gov.uk",
        "https://admin.qa.tax.service.gov.uk",
        "https://admin.staging.tax.service.gov.uk"
    ]
    supportsCredentials = true
}

# Microservice specific config

microservice {

  services {
    auth {
      host = localhost
      port = 8500
    }
    feedback-frontend {
      protocol = http
      host = localhost
      port = 9514
    }
  }
}

session {
  timeoutSeconds = 900
}

host = "http://localhost:9263"

urls {
  signOut       = "http://localhost:9025/gg/sign-out"
  frontend-base = "http://localhost:9260"
}

features {
  welsh-translation: false
}

timeout-dialog {
  timeout   = 900
  countdown = 120
}
